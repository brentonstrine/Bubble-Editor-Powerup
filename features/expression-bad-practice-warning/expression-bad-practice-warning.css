/* Expression Warning Base Styles (default to yellow) */
‚ù§Ô∏è codelesslove,
.‚ù§Ô∏èexpression-warning {
  border-top: dashed 1px yellow;
  border-bottom: dashed 1px yellow;
  position: relative;
}
‚ù§Ô∏è codelesslove,
.‚ù§Ô∏èexpression-warning-left {
  border-left: dashed 1px yellow;
  border-radius: 5px 0 0 5px;
}
‚ù§Ô∏è codelesslove,
.‚ù§Ô∏èexpression-warning-right {
  border-right: dashed 1px yellow;
  border-radius: 0 5px 5px 0;
}
‚ù§Ô∏è codelesslove,
.‚ù§Ô∏èexpression-warning-left.‚ù§Ô∏èexpression-warning-right {
  border: dashed 1px yellow;
  border-radius: 5px 5px 5px 5px;
}

/* Warning Level Colors */
‚ù§Ô∏è codelesslove,
.‚ù§Ô∏èexpression-warning.level-bad,
.‚ù§Ô∏èexpression-warning-left.level-bad,
.‚ù§Ô∏èexpression-warning-right.level-bad,
.‚ù§Ô∏èexpression-warning-left.‚ù§Ô∏èexpression-warning-right.level-bad {
  border-color: #ff4444;
}

‚ù§Ô∏è codelesslove,
.‚ù§Ô∏èexpression-warning.level-info,
.‚ù§Ô∏èexpression-warning-left.level-info,
.‚ù§Ô∏èexpression-warning-right.level-info,
.‚ù§Ô∏èexpression-warning-left.‚ù§Ô∏èexpression-warning-right.level-info {
  border-color: #3498db;
}

/* make borders and tag slightly transparent when other sub-expressions are focused, to match styles everywhere else */
‚ù§Ô∏è codelesslove,
.composer.hover_fade_out:hover .‚ù§Ô∏èexpression-warning {
  border-color: rgba(256, 256, 0, 0.3);
  &.level-info {
    border-color: rgba(52, 152, 219, 0.3);
  }
  &.level-bad {
    border-color: rgba(255, 68, 68, 0.3);
  }
}
‚ù§Ô∏è codelesslove,
.composer.hover_fade_out:hover .‚ù§Ô∏èexpression-warning-tag {
  opacity: 0.3;
}
‚ù§Ô∏è codelesslove,
.composer.hover_fade_out:hover .hovering .‚ù§Ô∏èexpression-warning {
  border-color: rgba(256, 256, 0);
  &.level-info {
    border-color: rgba(52, 152, 219, 1);
  }
  &.level-bad {
    border-color: rgba(255, 68, 68, 1);
  }
}
‚ù§Ô∏è codelesslove,
.composer.hover_fade_out:hover .hovering .‚ù§Ô∏èexpression-warning-tag {
  opacity: .7;
}

/* Warning Tags */
‚ù§Ô∏è codelesslove,/* Base tag */
.‚ù§Ô∏èexpression-warning-tag {
    top: -6px;
    content: "Warning";
    position: absolute;
    background: yellow;
    width: max-content;
    height: 10px;
    color: black;
    right: -9px;
    border-radius: 10px;
    font-size: 5px;
    text-align: center;
    line-height: 10px;
    padding: 0 4px;
    opacity: .7;

    &.level-bad {
      content: "Bad Practice";
      background: #ff4444;
      color: white;
    }
    &.level-info {
      content: "Info";
      background: #3498db;
      color: white;
    }
}

‚ù§Ô∏è codelesslove,/* On hover, bring opacity back up*/
.‚ù§Ô∏èexpression-warning-tag:hover,
.composer.hover_fade_out:hover .hovering .‚ù§Ô∏èexpression-warning-tag:hover {
  opacity: 1 !important;
}

/* Heart indicators */
‚ù§Ô∏è codelesslove,/* put a heart indicator in the top-left corner of the outlined expression fragment */
.‚ù§Ô∏èexpression-warning-left {
  &::before {
    content: "üíõ";
    top: -2px;
    position: absolute;
    width: max-content;
    height: 10px;
    left: -3px;
    font-size: 6px;
    line-height: 1;
  }

  &.level-bad::before {
      content: "‚ù§Ô∏è";
      color: #ff4444;
  }

  &.level-info::before {
      content: "üíô";
  }
}


/* Special CSS for checkboxes in Property Editors */
‚ù§Ô∏è codelesslove,/* Look specifically for the warning on the Public API checkbox */
.property-editor-2 .viewport [prop_name=expose].‚ù§Ô∏èexpression-warning {
  /* Correct the box so when the border is added the checkbox doesn't move */
  margin: -5px;
  padding: 5px;
  padding-top: 0;
  margin-top: 10px;
  width: -webkit-fill-available;

  &:has(.body .component-checkbox.property-editor-control.checked) {
    /* make the checkbox yellow */
    .checked {
      border: solid 2px yellow;
    }
  }

  /* Prevent the checkbox wrapping onto another line */
    .caption.Checkbox {
    width: auto;
  }
  
  /* Undo styling when warning is no longer applicable */
  &:not(:has(.body .component-checkbox.property-editor-control.checked)) {
    border: none;

    &::before {
      content: none;
    }
    .‚ù§Ô∏èexpression-warning-tag {
      display: none;
    }
  }
}